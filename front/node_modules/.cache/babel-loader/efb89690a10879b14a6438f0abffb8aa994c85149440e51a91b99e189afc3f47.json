{"ast":null,"code":"var _jsxFileName = \"/Users/lucaskellem/Desktop/Web/groupass/front/src/Components/NewStore.js\";\nimport './NewStore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewStore(_ref) {\n  let {} = _ref;\n  var name;\n  var completed;\n  const nameChange = event => {\n    name = event.target.value;\n    console.log(\"name: \" + name);\n  };\n  const completedChange = e => {\n    //completed = checkbox.checked;\n    //console.log(e.checked);\n    if (e.target.checked) {\n      //console.log(\"True\");\n      completed = true;\n    } else {\n      //console.log(\"False\");\n      completed = false;\n    }\n    console.log(\"Completed: \" + completed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"./NewTodo.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"todoForm\",\n      onSubmit: () => handleSubmit({\n        description,\n        completed\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todoDescription\",\n        children: [\"Todo Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          onInput: descriptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"todoCompleted\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Todo Completed?:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"switch-input\",\n            type: \"checkbox\",\n            onChange: e => completedChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-label\",\n            \"data-on\": \"true\",\n            \"data-off\": \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"switch-handle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = NewStore;\nexport async function handleSubmit(_ref2) {\n  let {\n    description = \"filler\",\n    completed = false\n  } = _ref2;\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"description\": description,\n    \"completed\": completed\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:3001/todo\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n}\nvar _c;\n$RefreshReg$(_c, \"NewStore\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","NewStore","_ref","name","completed","nameChange","event","target","value","console","log","completedChange","e","checked","children","rel","href","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","handleSubmit","description","type","onInput","descriptionChange","className","onChange","_c","_ref2","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","catch","error","$RefreshReg$"],"sources":["/Users/lucaskellem/Desktop/Web/groupass/front/src/Components/NewStore.js"],"sourcesContent":["import './NewStore.css';\n\nexport default function NewStore({}){\n    var name;\n    var completed;\n    const nameChange = (event) => {\n        name = event.target.value;\n        console.log(\"name: \" + name);\n    };\n    const completedChange = (e) => {\n        //completed = checkbox.checked;\n        //console.log(e.checked);\n        if(e.target.checked){\n            //console.log(\"True\");\n            completed = true;\n        }else{\n            //console.log(\"False\");\n            completed = false;\n        }\n        console.log(\"Completed: \" + completed);\n    };\n    return (\n        <div>\n            <link rel=\"stylesheet\" href=\"./NewTodo.css\"/>\n            <h1>Todo Form</h1>\n            <form id=\"todoForm\" onSubmit={ () => handleSubmit({description, completed}) }>\n                <div id=\"todoDescription\">\n                    Todo Description: \n                    <input type=\"text\" name=\"description\" onInput={descriptionChange}></input>\n                </div>\n                <div id=\"todoCompleted\">\n                    <span>Todo Completed?:</span>\n                    <label className=\"switch\"> \n\t                    <input className=\"switch-input\" type=\"checkbox\" onChange={(e) => completedChange(e)} />\n\t                    <span className=\"switch-label\" data-on=\"true\" data-off=\"false\"></span> \n\t                    <span className=\"switch-handle\"></span> \n                    </label>\n                </div>\n                <button type=\"submit\">Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport async function handleSubmit({ description = \"filler\", completed = false}) {\n    \n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n        \"description\": description,\n        \"completed\": completed\n    });\n\n    var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n    };\n\n    fetch(\"http://localhost:3001/todo\", requestOptions)\n        .then(response => response.text())\n        .then(result => console.log(result))\n        .catch(error => console.log('error', error));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}